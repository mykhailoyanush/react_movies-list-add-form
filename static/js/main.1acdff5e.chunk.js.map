{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","titleError","descriptionError","imgUrlError","imdbUrlError","imdbIdError","validUrl","url","test","add","flag","length","setState","props","validId","onAdd","this","onSubmit","event","preventDefault","htmlFor","id","type","value","placeholder","classNames","NewMovie__borderError","onChange","target","onClick","Component","App","moviesFromServer","addMovie","current","some","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1acdff5e.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","/* eslint-disable @typescript-eslint/quotes */\n/* eslint-disable no-useless-escape */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport classNames from 'classnames';\nimport { Component } from 'react';\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n  validId: (id: string) => boolean,\n};\ntype State = {\n  title: string,\n  description: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string,\n  titleError: string,\n  descriptionError: string,\n  imgUrlError: string,\n  imdbUrlError: string,\n  imdbIdError: string,\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    titleError: '',\n    descriptionError: '',\n    imgUrlError: '',\n    imdbUrlError: '',\n    imdbIdError: '',\n  };\n\n  validUrl = (url: string) => {\n    return /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/\n      .test(url);\n  };\n\n  add = () => {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n    let flag = true;\n\n    if (title.length === 0) {\n      this.setState({ titleError: 'Title is Empty' });\n      flag = false;\n    }\n\n    if (description.length === 0) {\n      this.setState({ descriptionError: 'Description is Empty' });\n      flag = false;\n    }\n\n    if (!this.validUrl(imgUrl)) {\n      this.setState({ imgUrlError: 'Icorrect Url' });\n      flag = false;\n    }\n\n    if (!this.validUrl(imdbUrl)) {\n      this.setState({ imdbUrlError: 'Icorrect Url' });\n      flag = false;\n    }\n\n    if (this.props.validId(imdbId)) {\n      this.setState({ imdbIdError: 'Id exist' });\n      flag = false;\n    }\n\n    if (flag) {\n      this.props.onAdd({\n        title,\n        description,\n        imgUrl,\n        imdbUrl,\n        imdbId,\n      });\n      this.setState({\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      });\n    }\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      titleError,\n      descriptionError,\n      imgUrlError,\n      imdbUrlError,\n      imdbIdError,\n    } = this.state;\n\n    return (\n      <form\n        className=\"NewMovie\"\n        onSubmit={(event) => {\n          event.preventDefault();\n        }}\n      >\n        <table className=\"NewMovie__table\">\n          <caption>Add Form</caption>\n          <tbody>\n            <tr>\n              <td>\n                <label htmlFor=\"title\">\n                  Title\n                </label>\n              </td>\n              <td>\n                <input\n                  id=\"title\"\n                  type=\"text\"\n                  value={title}\n                  placeholder=\"Title\"\n                  className={classNames({ NewMovie__borderError: titleError !== '' })}\n                  onChange={(event) => {\n                    this.setState({\n                      title: event.target.value,\n                      titleError: '',\n                    });\n                  }}\n                />\n              </td>\n              <td className=\"NewMovie__error\">\n                {titleError}\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <label htmlFor=\"Description\">\n                  Description\n                </label>\n              </td>\n              <td>\n                <textarea\n                  id=\"Description\"\n                  placeholder=\"Description\"\n                  value={description}\n                  className={classNames({ NewMovie__borderError: descriptionError !== '' })}\n                  onChange={(event) => this.setState({\n                    description: event.target.value,\n                    descriptionError: '',\n                  })}\n                />\n              </td>\n              <td className=\"NewMovie__error\">\n                {descriptionError}\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <label htmlFor=\"imgUrl\">\n                  Image Url\n                </label>\n              </td>\n              <td>\n                <input\n                  id=\"imgUrl\"\n                  type=\"text\"\n                  value={imgUrl}\n                  placeholder=\"imgUrl\"\n                  className={classNames({ NewMovie__borderError: imgUrlError !== '' })}\n                  onChange={(event) => this.setState({\n                    imgUrl: event.target.value,\n                    imgUrlError: '',\n                  })}\n                />\n              </td>\n              <td className=\"NewMovie__error\">\n                {imgUrlError}\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <label htmlFor=\"imdbUrl\">\n                  IMDb Url\n                </label>\n              </td>\n              <td>\n                <input\n                  id=\"imdbUrl\"\n                  type=\"text\"\n                  value={imdbUrl}\n                  placeholder=\"imdbUrl\"\n                  className={classNames({ NewMovie__borderError: imdbUrlError !== '' })}\n                  onChange={(event) => this.setState({\n                    imdbUrl: event.target.value,\n                    imdbUrlError: '',\n                  })}\n                />\n              </td>\n              <td className=\"NewMovie__error\">\n                {imdbUrlError}\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <label htmlFor=\"imdbId\">\n                  imdbId\n                </label>\n              </td>\n              <td>\n                <input\n                  type=\"text\"\n                  value={imdbId}\n                  placeholder=\"imdbId\"\n                  className={classNames({ NewMovie__borderError: imdbIdError !== '' })}\n                  onChange={(event) => this.setState({\n                    imdbId: event.target.value,\n                    imdbIdError: '',\n                  })}\n                />\n              </td>\n              <td className=\"NewMovie__error\">\n                {imdbIdError}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <button\n          type=\"submit\"\n          onClick={this.add}\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState((current) => ({\n      movies: [...current.movies, movie],\n    }));\n  };\n\n  validId = (id: string) => {\n    return this.state.movies.some(movie => movie.imdbId === id);\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} validId={this.validId} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}