{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","onAdd","validId","useState","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","titleError","setTitleError","imgUrlError","setImgUrlError","imdbUrlError","setImdbUrlError","imdbIdError","setImdbIdError","validUrl","url","test","onSubmit","event","preventDefault","htmlFor","id","type","value","placeholder","classNames","NewMovie__borderError","onChange","target","onClick","flag","length","App","moviesFromServer","setMovie","current","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.69a7db30.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","/* eslint-disable @typescript-eslint/quotes */\n/* eslint-disable no-useless-escape */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport classNames from 'classnames';\nimport { useState } from 'react';\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n  validId: (id: string) => boolean,\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd, validId }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n  const [titleError, setTitleError] = useState('');\n  const [imgUrlError, setImgUrlError] = useState('');\n  const [imdbUrlError, setImdbUrlError] = useState('');\n  const [imdbIdError, setImdbIdError] = useState('');\n\n  const validUrl = (url: string) => {\n    return /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/\n      .test(url);\n  };\n\n  const add = () => {\n    let flag = true;\n\n    if (title.length === 0) {\n      setTitleError('Title is Empty');\n      flag = false;\n    }\n\n    if (!validUrl(imgUrl)) {\n      setImgUrlError('Incorrect Url');\n      flag = false;\n    }\n\n    if (!validUrl(imdbUrl)) {\n      setImdbUrlError('Incorrect Url');\n      flag = false;\n    }\n\n    if (validId(imdbId)) {\n      setImdbIdError('Id exist');\n      flag = false;\n    }\n\n    if (flag) {\n      onAdd({\n        title,\n        description,\n        imgUrl,\n        imdbUrl,\n        imdbId,\n      });\n      setTitle('');\n      setDescription('');\n      setImgUrl('');\n      setImdbUrl('');\n      setImdbId('');\n    }\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      onSubmit={(event) => {\n        event.preventDefault();\n      }}\n    >\n      <table className=\"NewMovie__table\">\n        <caption>Add Form</caption>\n        <tbody>\n          <tr>\n            <td>\n              <label htmlFor=\"title\">\n                Title\n              </label>\n            </td>\n            <td>\n              <input\n                id=\"title\"\n                type=\"text\"\n                value={title}\n                placeholder=\"Title\"\n                className={classNames({ NewMovie__borderError: titleError !== '' })}\n                onChange={(event) => {\n                  setTitle(event.target.value);\n                  setTitleError('');\n                }}\n              />\n            </td>\n            <td className=\"NewMovie__error\">\n              {titleError}\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <label htmlFor=\"Description\">\n                Description\n              </label>\n            </td>\n            <td>\n              <textarea\n                id=\"Description\"\n                placeholder=\"Description\"\n                value={description}\n                onChange={(event) => {\n                  setDescription(event.target.value);\n                }}\n              />\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <label htmlFor=\"imgUrl\">\n                Image Url\n              </label>\n            </td>\n            <td>\n              <input\n                id=\"imgUrl\"\n                type=\"text\"\n                value={imgUrl}\n                placeholder=\"imgUrl\"\n                className={classNames({ NewMovie__borderError: imgUrlError !== '' })}\n                onChange={(event) => {\n                  setImgUrl(event.target.value);\n                  setImgUrlError('');\n                }}\n              />\n            </td>\n            <td className=\"NewMovie__error\">\n              {imgUrlError}\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <label htmlFor=\"imdbUrl\">\n                IMDb Url\n              </label>\n            </td>\n            <td>\n              <input\n                id=\"imdbUrl\"\n                type=\"text\"\n                value={imdbUrl}\n                placeholder=\"imdbUrl\"\n                className={classNames({ NewMovie__borderError: imdbUrlError !== '' })}\n                onChange={(event) => {\n                  setImdbUrl(event.target.value);\n                  setImdbUrlError('');\n                }}\n              />\n            </td>\n            <td className=\"NewMovie__error\">\n              {imdbUrlError}\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <label htmlFor=\"imdbId\">\n                imdbId\n              </label>\n            </td>\n            <td>\n              <input\n                type=\"text\"\n                value={imdbId}\n                placeholder=\"imdbId\"\n                className={classNames({ NewMovie__borderError: imdbIdError !== '' })}\n                onChange={(event) => {\n                  setImdbId(event.target.value);\n                  setImdbIdError('');\n                }}\n              />\n            </td>\n            <td className=\"NewMovie__error\">\n              {imdbIdError}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <button\n        type=\"submit\"\n        onClick={add}\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovie] = useState(moviesFromServer);\n\n  const addMovie = (movie: Movie) => {\n    setMovie((current: Movie[]) => [...current, movie]);\n  };\n\n  const validId = (id: string) => {\n    return movies.some(movie => movie.imdbId === id);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} validId={validId} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}